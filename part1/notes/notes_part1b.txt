Part 1b Javascript
1. JS new standard ES10
2. Babel is the transpiler when new JS is not compatible to browser
3. Node.js is JS runtime

Variables:
    const x = 1 // constant
    let y = 5 // declaring normal variables
    var z = 10 // don't use it anymore
    https://medium.com/podiihq/javascript-variables-should-you-use-let-var-or-const-394f7645c88f

Arrays:
    const t = [1, 2, 3]
    t.push(3)
    console.log(t.length, t[1])
    t.forEach(value => {console.log(value)})
    in array operations, new ones are created ex: concat
    react, mostly functional programming ideas
    other array operations:
        map: simply transforms  
            // performs operations on each array entry
            const t = [1, 2, 3]
            const squares = t.map(value => value ** 2)
    destructuring assignment:
        const t = [1, 2, 3, 4, 5, 6]
        const [one, two, three, ...rest] = t
        console.log(one, two, three)  // 1, 2, 3 is printed
        console.log(rest)          // [4 ,5, 6] is printed

Objects:
    declared as object literals mainly
    example:
        const object1 = {
          name: 'Arto Hellas',
          age: 35,
          education: 'PhD',
        }
    Access:
        console.log(object1.name)         // Arto Hellas is printed
        const fieldName = 'age' 
        console.log(object1[fieldName])    // 35 is printed
    Special Cases:
        object1.address = 'Helsinki' // adding new property
        object1['secret number'] = 12341 // with space in property name
    Note:
        Class syntax is used but not in same sense as Java

Functions:
    => arrow functions, added in JS from ES6
    Looks cool!
    
    Decl. Normal Way:
        function product(a, b) {
          return a * b
        }

        const result = product(2, 6)
        // result is now 12
    
    Decl. as func. expression:
        const average = function(a, b) {
          return (a + b) / 2
        }

        const result = average(2, 5)
        // result is now 3.5
    
    Decl. using arrow func:
        const sum = (p1, p2) => {
          console.log(p1)
          console.log(p2)
          return p1 + p2
        }
        const result = sum(1, 5)
        console.log(result)

        const square = p => {
          console.log(p)
          return p * p
        }

    Decl. simply arrow:
        const square = p => p * p

Time Spent Learning Part 1b: 20 Mins
Time Spent on Exercises: 15 Mins(1.3-1.5)