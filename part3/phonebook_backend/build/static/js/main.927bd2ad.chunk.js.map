{"version":3,"sources":["services/phonebook.js","components/PhoneBookFilter.js","components/PhoneBookAddEntry.js","components/PhoneBookMatched.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","PhoneBookFilter","filter","handleFilterChange","value","onChange","PhoneBookAddEntry","addNewName","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","PhoneBookMatched","matched","Notification","message","classname","className","App","useState","persons","setPersons","setNewName","setNewNumber","setFilter","errorMessage","setErrorMessage","successMessage","setSuccessMessage","useEffect","phonebookService","allPersons","removePerson","event","result","window","confirm","target","name","deletedPersonName","remainingPersons","person","setTimeout","catch","p","toLowerCase","indexOf","map","key","number","onClick","e","preventDefault","newNameObj","find","matchedPerson","console","log","newPerson","length","newPersons","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.927bd2ad.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, remove, update}","import React from 'react'\r\n\r\nconst PhoneBookFilter = ({filter, handleFilterChange}) => {\r\n    return(\r\n        <div>\r\n            filter shown with: <input value={filter} onChange={handleFilterChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PhoneBookFilter;","import React from 'react'\r\n\r\nconst PhoneBookAddEntry = ({addNewName, newName, handleNameChange, newNumber, handleNumberChange}) => {\r\n    return (\r\n        <form onSubmit={addNewName}>\r\n            <div>\r\n                name: <input value={newName} onChange={handleNameChange}/>\r\n            </div>\r\n            <div>\r\n                number: <input value={newNumber} onChange={handleNumberChange} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default PhoneBookAddEntry;","const PhoneBookMatched = ({matched}) => {\r\n    return(\r\n        matched\r\n    )\r\n}\r\n\r\nexport default PhoneBookMatched;","import React from 'react'\r\n\r\nconst Notification = ({ message, classname }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className={classname}>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Notification;","import React, { useState, useEffect } from 'react'\nimport phonebookService from './services/phonebook'\nimport PhoneBookFilter from './components/PhoneBookFilter'\nimport PhoneBookAddEntry from './components/PhoneBookAddEntry'\nimport PhoneBookMatched from './components/PhoneBookMatched'\nimport './index.css'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [successMessage, setSuccessMessage] = useState(null)\n\n  // getting the persons info from the db.json using axios\n  // method 1 using just axios\n  //axios.get('http://localhost:3001/persons').then(response =>\n  //{\n    // console.log(response.data)\n    //setPersons(response.data)\n  //})\n  // method 2 using the effect hook\n  useEffect(() => {\n    phonebookService.getAll().then(allPersons => setPersons(allPersons))\n  })\n  \n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const handleFilterChange = e => setFilter(e.target.value)\n  \n  const addNewName = (event) => {\n    event.preventDefault()\n    const newNameObj = {\n      name: newName,\n      number: newNumber,\n    }\n    if (persons.find(person => person.name === newName)){\n      // Editing an existing person in JSON\n      let matchedPerson = persons.find(person => person.name === newName)\n      console.log(matchedPerson.id);\n      newNameObj.id = matchedPerson.id\n      if (window.confirm(newName+' is already added to phonebook. Do you like to replace the old number with a newer number?')){\n        phonebookService.update(matchedPerson.id, newNameObj).then(newPerson => {\n          setSuccessMessage(`${newNameObj.name}'s phone number is successfully edited in the Phone Book.`)\n          setTimeout(() => {\n            persons.map(person => person.id === newNameObj.id?newPerson:person)\n            setSuccessMessage(null)\n          }, 5000)\n        }).catch(() => {\n          setErrorMessage(`${newNameObj.name}'s phone number is not edited in the Phone Book.`)\n          setTimeout(() => {setErrorMessage(null)}, 5000)\n        })\n      }\n      \n    } else {\n      // Adding a new person to JSON\n      newNameObj.id = persons.length +1\n      phonebookService.create(newNameObj).then(newPersons => {\n        setNewName('')\n        setNewNumber('')\n        setSuccessMessage(`${newNameObj.name} is successfully added to the Phone Book.`)\n        setTimeout(() => {\n          setSuccessMessage(null)\n          persons.concat(newPersons)\n        }, 5000)\n      }).catch(() => {\n        // console.log(\"Error in string the phone number in the database\")\n        setErrorMessage(`${newNameObj.name}'s phone number is not added to the Phone Book.`)\n        setTimeout(() => {setErrorMessage(null)}, 5000)\n      })     \n    }    \n  }\n\n  // Removing a person\n  const removePerson = (event) => {\n    let result = window.confirm(`Delete ${event.target.name}?`);\n    let id = event.target.id;\n    let deletedPersonName = event.target.name;\n    let remainingPersons = persons.filter(person => person.id !== id);\n    //console.log(result, event.target.id)\n    if (result) {\n      phonebookService.remove(event.target.id).then(() => {\n        setSuccessMessage(`${deletedPersonName} is successfully removed to the Phone Book.`)\n        setTimeout(() => {\n          setSuccessMessage(null)\n          setPersons(remainingPersons)\n        }, 5000)\n      }).catch(() => {\n        setErrorMessage(`${deletedPersonName} is already removed from the Phone Book.`)\n        setTimeout(() => {setErrorMessage(null)}, 5000)\n      })\n    }\n    \n  }\n  \n  let personsFiltered = persons.filter(p => p.name.toLowerCase().indexOf(filter.toLowerCase()) > -1);\n  let matched = personsFiltered.map(p => <div key={p.id}>{p.name} {p.number} <button id={p.id} name={p.name} onClick={removePerson}>Delete</button></div>);\n\n  // Page rendering\n  return (\n    <div>\n      <Notification message={errorMessage===null?successMessage:errorMessage} classname={errorMessage===null?'success':'error'}/>\n      <h2>Phonebook</h2>\n        <PhoneBookFilter value={filter} handleFilterChange={handleFilterChange}/>\n      <h2>add a new</h2>\n        <PhoneBookAddEntry addNewName={addNewName} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n        <PhoneBookMatched matched={matched} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}